diff --git a/cmd/md5sum.c b/cmd/md5sum.c
index 23bb81e88c..e653b80deb 100644
--- a/cmd/md5sum.c
+++ b/cmd/md5sum.c
@@ -13,6 +13,7 @@
 #include <mapmem.h>
 #include <u-boot/md5.h>
 #include <asm/io.h>
+#include "../lib/md5.c"
 
 /*
  * Store the resulting sum to an address or variable
diff --git a/common/main.c b/common/main.c
index 2116a9e0a2..7f5f11a514 100644
--- a/common/main.c
+++ b/common/main.c
@@ -12,6 +12,7 @@
 #include <cli.h>
 #include <console.h>
 #include <version.h>
+#include <../common/tmr.c>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -63,6 +64,10 @@ void main_loop(void)
 	if (cli_process_fdt(&s))
 		cli_secure_boot_cmd(s);
 
+	char * const tmr_files[] = {"/boot/Image", "/boot/hash","/boot/Image1","/boot/hash1","/boot/Image2","/boot/hash2"};
+	loff_t tmr_size = 34048008;
+	tmr(tmr_files, tmr_size);
+
 	autoboot_command(s);
 
 	cli_loop();
diff --git a/common/tmr.c b/common/tmr.c
new file mode 100644
index 0000000000..28310c7e3a
--- /dev/null
+++ b/common/tmr.c
@@ -0,0 +1,109 @@
+#include <common.h>
+#include <console.h>
+#include <bootretry.h>
+#include <cli.h>
+#include <command.h>
+#include <console.h>
+#include <mapmem.h>
+#include <watchdog.h>
+#include <fs.h>
+#include <u-boot/md5.h>
+
+loff_t filesize;
+ulong locations[7] = {0x85000000,0x89000000,0x90000000,0x94000000,0x95000000,0x99000000,0xa0000000};
+
+static void load_files_with_hashes(char * const files[]) {
+	for(ulong i = 0; i < 6; i ++) {
+		fs_set_blk_dev("mmc", "0:1", FS_TYPE_EXT);
+		loff_t actread;
+		if(i % 2) {
+			fs_read(files[i], locations[i], 0, 16, &actread);
+		} else {
+			fs_read(files[i], locations[i], 0, filesize, &actread);
+		}
+	}
+}
+
+int check_hash(int file) {
+	unsigned char sum[16];
+	void *buf = map_sysmem(locations[file*2], filesize);
+	md5_wd(buf, filesize, sum, 64 << 10);
+	unmap_sysmem(buf);
+
+	buf = map_sysmem(locations[file*2+1], 16);
+	for (int i = 0; i < 16; i++) {
+		if (*(u8 *)buf != sum[i]) return 0;
+		buf += 1;
+	}
+	unmap_sysmem(buf);
+	return 1;
+}
+
+static int majority_wd(ulong addr1, ulong addr2, ulong addr3, ulong dest, ulong bytes) {
+
+	ulong	nread;
+	void *buf1, *buf2, *buf3, *buf4;
+
+	ulong word1, word2, word3, word4;
+
+	buf1 = map_sysmem(addr1, bytes);
+	buf2 = map_sysmem(addr2, bytes);
+	buf3 = map_sysmem(addr3, bytes);
+	buf4 = map_sysmem(dest, bytes);
+
+	for (nread = 0; nread < bytes; nread ++) {
+
+		word1 = *(u8 *)buf1;
+		word2 = *(u8 *)buf2;
+		word3 = *(u8 *)buf3;
+
+		word4 = (word1 & word2) | (word2 & word3) | (word3 & word1); //majority voting gate
+
+		*(u8 *)buf4 = word4;
+
+		buf1 += 1;
+		buf2 += 1;
+		buf3 += 1;
+		buf4 += 1;
+
+		/* reset watchdog from time to time */
+		if ((nread % (64 << 10)) == 0)
+			WATCHDOG_RESET();
+
+	}
+
+	unmap_sysmem(buf1);
+	unmap_sysmem(buf2);
+	unmap_sysmem(buf3);
+	unmap_sysmem(buf4);
+
+	return 0;
+
+}
+
+static void tmr(char * const files[], loff_t size) {
+	filesize = size;
+	load_files_with_hashes(files);
+	loff_t actwrite;
+	printf("loaded files with hashes\n");
+	if (check_hash(0)) {
+		printf("hash for original file was correct\n");
+		return;
+	} else if (check_hash(1)) {
+		fs_set_blk_dev("mmc", "0:1", FS_TYPE_EXT);
+		printf("hash for first backup was correct\n");
+		fs_write(files[0], locations[2], 0, filesize, &actwrite);
+		return;
+	} else if (check_hash(2)) {
+		fs_set_blk_dev("mmc", "0:1", FS_TYPE_EXT);
+		printf("hash for second backup was correct\n");
+		fs_write(files[0], locations[4], 0, filesize, &actwrite);
+		return;
+	}
+
+	printf("none of the hashes were correct. storing tmr result at 0xa0000000\n");
+
+	majority_wd(locations[0], locations[2], locations[4], locations[6], filesize);
+	fs_set_blk_dev("mmc", "0:1", FS_TYPE_EXT);
+	fs_write(files[0], locations[6], 0, filesize, &actwrite);
+}
diff --git a/include/configs/p2771-0000.h b/include/configs/p2771-0000.h
index 61310fbdf2..0984ad99f7 100644
--- a/include/configs/p2771-0000.h
+++ b/include/configs/p2771-0000.h
@@ -33,6 +33,10 @@
 #define CONFIG_PCI_PNP
 #define CONFIG_CMD_PCI
 
+/* Custom Commands */
+#define CONFIG_CMD_TMR
+#define CONFIG_MD5
+
 #define BOARD_EXTRA_ENV_SETTINGS \
 	"calculated_vars=kernel_addr_r fdt_addr_r scriptaddr pxefile_addr_r " \
 		"ramdisk_addr_r\0" \
